using System;
using System.IO;
using Android.App;
using Android.OS;
using CryptoSQLite;


namespace CryptoSQLiteSample.Droid
{
    [CryptoTable("MyTasks")]
    public class Tasks
    {
        [PrimaryKey, AutoIncremental]
        public int Id { get; set; }

        [Encrypted]
        public string Description { get; set; }

        public bool IsDone { get; set; }
    }

    [Activity(Label = "CryptoSQLiteSample.Droid", MainLauncher = true, Icon = "@drawable/icon")]
    public class MainActivity : Activity
    {
        private string fileName = "MySqlDb.db3";

        protected override void OnCreate(Bundle bundle)
        {
            base.OnCreate(bundle);
            // Set our view from the "main" layout resource
            SetContentView(Resource.Layout.Main);

			// ! IMPORTANT ! This function determines how to talk to a specific instance of the native SQLite3 library.
            // You can call this function in Application::OnCreate() function or in Application ctor.
            SQLitePCL.Batteries_V2.Init(); // From NuGet package SQLitePCLRaw.batteries_green

            var pathToDatabaseFile = Path.Combine(Android.OS.Environment.ExternalStorageDirectory.Path, fileName);

            try
            {
                var db = new CryptoSQLiteConnection(pathToDatabaseFile, CryptoAlgoritms.AesWith256BitsKey);

                db.SetEncryptionKey(new byte[32]);

                db.CreateTable<Tasks>();

                db.InsertItem(new Tasks { Description = "Secret task", IsDone = true });

                var item = db.GetItem<Tasks>(1);
            }
            catch (Exception ex)
            {
                var msg = ex.Message;
                
            }

		    

		}

        
	}
}


